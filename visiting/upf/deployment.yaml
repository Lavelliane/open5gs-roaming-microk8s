apiVersion: apps/v1
kind: Deployment
metadata:
  name: v-upf
  namespace: open5gs
spec:
  replicas: 1
  selector:
    matchLabels:
      app: v-upf
  template:
    metadata:
      labels:
        app: v-upf
    spec:
      initContainers:
        - name: setup-network
          image: docker.io/library/upf:v2.7.5
          securityContext:
            privileged: true
            capabilities:
              add: ["NET_ADMIN", "SYS_ADMIN", "NET_RAW"]
          command: ["/bin/bash", "-c"]
          args:
            - |
              sysctl -w net.ipv4.ip_forward=1
              ip tuntap add name ogstun mode tun
              ip addr add 10.45.0.1/16 dev ogstun
              ip link set ogstun up
              echo "Network interfaces configured successfully"
          volumeMounts:
            - name: dev-net-tun
              mountPath: /dev/net/tun
              readOnly: false
      containers:
        - name: v-upf
          image: docker.io/library/upf:v2.7.5
          imagePullPolicy: IfNotPresent 
          command: [ "open5gs-upfd", "-c", "/etc/open5gs/upf.yaml" ]
          securityContext:
            privileged: true
            capabilities:
              add: ["NET_ADMIN", "SYS_ADMIN", "NET_RAW"]
          volumeMounts:
            - name: config
              mountPath: /etc/open5gs/upf.yaml
              subPath: upf.yaml
            - name: dev-net-tun
              mountPath: /dev/net/tun
              readOnly: false
            - name: var-log
              mountPath: /var/log/open5gs
          ports:
            - name: pfcp
              containerPort: 8805
              protocol: UDP
            - name: gtpu
              containerPort: 2152
              protocol: UDP
      volumes:
        - name: config
          configMap:
            name: v-upf-config
        - name: dev-net-tun
          hostPath:
            path: /dev/net/tun
            type: CharDevice
        - name: var-log
          emptyDir: {}